
@inject OrgCircuitProvider OrgCircuitProvider
@inject LiveChatCircuitProvider LiveChatCircuitProvider

@if(_orgCircuit is null)
{
    return;
}

<div>
    <label>
        <input type="checkbox" @bind="_orgCircuit.GroupingEnabled" />  Allow Chat Grouping
    </label>
</div>

<button @onclick="ToggleDance">Dance Party</button>

@if(_liveChatCircuit is not null)
{
    <details class="advanced-controls">
        <summary>Advanced</summary>
            <div>
                <label>
                    Group Matching Geometric Distance Threshold<br>
                    <input type="number" step="0.05" @bind="_liveChatCircuit.Messages.MessageDistanceThreshold" min="0.1" max="1" /> 
                </label>
            </div>
    </details>
}

@code {
    OrgCircuit? _orgCircuit;
    ILiveChatCircuit? _liveChatCircuit;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }

        _orgCircuit = await OrgCircuitProvider.GetAsync();
        _liveChatCircuit = await LiveChatCircuitProvider.GetAsync();

        StateHasChanged();
    }

    private void ToggleDance()
    {
        
    }
}
